<?xml version="1.0" encoding="UTF-8"?>

<?import java.lang.*?>
<?import java.util.*?>
<?import javafx.scene.*?>
<?import javafx.scene.control.*?>
<?import javafx.scene.layout.*?>

<AnchorPane prefHeight="727.0" prefWidth="985.0" style="-fx-background-color: #333333" xmlns="http://javafx.com/javafx/8" xmlns:fx="http://javafx.com/fxml/1">
    <children>
        <TextArea editable="false" prefHeight="727.0" prefWidth="985.0" text="                                        Group3 StackCalculator Instructions&#10;&#10;This application is a stack calculator: it allows to store complex numbers into a stack.&#10;You can insert a complex number by typing it inside the text field and clicking ENTER.&#10;The complex number can be typed using the following forms:&#10;±a&#10;±bi&#9;&#9;except for &quot;+i&quot; and &quot;-i&quot;&#10;±ib&#9;&#9;except for &quot;+i&quot; and &quot;-i&quot;&#10;±a±bi&#10;±a±ib&#10;±bi±a&#10;±ib±a&#10;&#10;Every complex number that you want to insert MUSTN'T include whitespaces.&#10;In every binary operation the first operand is the second element of the stack and the second operand is the first one.&#10;The representation of the complex numbers is characterized by the use of &quot;.&quot; as decimal delimiter and &quot;'&quot; as group delimiter.&#10;&#10;The calculator supports 26 variables whose names are a, b, …, z in which complex numbers can be stored.&#10;&#10;The calculator includes the following operations:&#10;&#10;                   --- Basic Operations ---&#10;•&#9;+&#10;Makes the SUM of the first 2 elements in the stack, popping them, and pushes the result at the top of the stack&#10;&#10;•&#9;-&#10;Makes the SUBTRACTION of the first 2 elements in the stack, popping them, and pushes the result at the top of the stack&#10;&#10;•&#9;*&#10;Makes the PRODUCT of the first 2 elements in the stack, popping them, and pushes the result at the top of the stack&#10;&#10;•&#9;/&#10;Makes the DIVISION of the first 2 elements in the stack, popping them, and pushes the result at the top of the stack&#10;&#10;•&#9;sqrt&#10;Makes the SQUARE ROOT of the first element in the stack, popping it, and pushes the result at the top of the stack&#10;&#10;•&#9;+-&#10;Makes the NEGATE of the first element in the stack, popping it, and pushes the result at the top of the stack&#10;&#10;&#10;                   --- Stack Operations ---&#10;•&#9;clear&#10;Deletes all the elements in the stack&#10;&#10;•&#9;drop&#10;Deletes the first element in the stack&#10;&#10;•&#9;dup&#10;Duplicates the first element in the stack&#10;&#10;•&#9;swap&#10;Inverts the first 2 elements in the stack&#10;&#10;•&#9;over&#10;Duplicates the second element in the stack&#10;&#10;&#10;                   --- Variables Operations ---&#10;•&#9;&gt;x&#10;Removes the first element in the stack and saves it inside variable x&#10;&#10;•&#9;&lt;x&#10;Pushes to the stack the element stored by x&#10;&#10;•&#9;+x&#10;Sums the first element in the stack, popping it, to the element stored by x and stores the result inside variable x&#10;&#10;•&#9;-x&#10;Subtracts the first element in the stack, popping it, from the element stored by x and stores the result inside variable x&#10;&#10;•&#9;show x&#10;Shows int the text fields the element stored by x&#10;&#10;&#10;                   --- User-Defined Operations ---&#10;•&#9;You can define a custom operation by typing in the text field: name operation1 operation2 ... operationN, where&#10;- &quot;name&quot; is the name of the user defined operation. It MUSTN'T contain whitespaces and MUSTN'T be &#10;        a complex number, a variable name, &quot;show&quot;, &quot;del&quot; or a previous operation symbol&#10;- &quot;operationX&quot; is any of previous operation symbols, a complex number or another user operation previously defined&#10;&#10;•&#9;You can overwrite a user operation previously defined by typing in the text field: &#10;        name newOperation1 newOperation2 ... newOperationN, where&#10;- &quot;name&quot; is the name of the user operation previously defined&#10;- &quot;newOperationX&quot; is any of previous operation symbols, a complex number or another user operation previously defined&#10;&#10;•&#9;You can delete a user operation previously defined by typing in the text field, the deletion policy is CASCADE:&#10;        del name, where&#10;- &quot;name&quot; is the name of the user operation previously defined&#10;&#10;" AnchorPane.bottomAnchor="0.0" AnchorPane.leftAnchor="0.0" AnchorPane.rightAnchor="0.0" AnchorPane.topAnchor="0.0" />
    </children>
</AnchorPane>
